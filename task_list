PICKED TASKS

* JSONB
  * get -> takes var array of integers and string and makes you point to the beginning of the data in json struct
  * build a one direction readabale json serialization type, where we only need to go forward until we reach the desired type
  * create_worm
  * uses JSONparser's node as input object
  * will use binary iterators underneath, because of structural similarity with blob_inline and blob_extended

 * Implement the below functions as templated macros, so their usage is common between all of text, blob, numeric and json
  * hash for jsonb yet to be implemented
  * compare for jsonb, yet to be implemented
  * is_prefix for jsonb, yet to be implemented
  * using the corresponding read write iterators
    * generate_prefix -> read iterator on the larger one and write on the shorter one -> to be used for indexes -> 1 if a is prefix of b, 2 if they are equal, 0 otherwise



future tasks

MATERIALIZED NUMERIC
  * we also need a materialized struct to store all the digits (base 10^12)
    * struct stores uint sign_bits:2, int64_t exponent, and then a value array list of uint64_t digits
    * add functions like push least significant digit, add most significant digit (also changes exponent) and modify/get nth digit
    * write a complete briefcase of functions to perform add, sub, multiplication and division, compare and min, max functions