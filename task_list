PICKED TASKS

* JSONB
  * uses JSONparser's node as input object
  * allows us to serialize it as per the design of this project
  * generates binary_reader_interface and numeric_reader_interface on text and numeric types
  * add hasher to hash some attribute nestedly
  * first byte says type
    0 -> NULL
    1 -> true
    2 -> false
    3 -> string -> 4 byte size (>= 4), and then the bytes
    4 -> numeric -> 4 byte size (always 4 + 4*Ndigits + 3), 1 byte sign bits, 2 bytes exponent, then digits
    5 -> json array -> 4 byte size (>= 8), 4 byte element count, then elements
    6 -> json object -> 4 byte size (>= 8), 4 byte element count (always a multiple of 2, key then values), then keys and values alternatively, keys are always strings and ordered lexicographically

future tasks

MATERIALIZED NUMERIC
  * we also need a materialized struct to store all the digits (base 10^12)
    * struct stores uint sign_bits:2, int64_t exponent, and then a value array list of uint64_t digits
    * implement numeric_reader_interface for MATERIALIZED_NUMERIC
    * add functions like push least significant digit, add most significant digit (also changes exponent) and modify/get nth digit
    * write a complete briefcase of functions to perform add, sub, multiplication and division, compare and min, max functions